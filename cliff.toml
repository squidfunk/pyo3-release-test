# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration


[changelog]
# A Tera template to be rendered for each release in the changelog.
# See https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - `{{ commit.id }}` {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**breaking**] {% endif %}\
            _{{ commit.message | upper_first }}_\
    {% endfor %}
{% endfor %}
"""
# Remove leading and trailing whitespaces from the changelog's body.
trim = true
# Render body even when there are no releases to process.
render_always = true
# An array of regex based postprocessors to modify the changelog.
postprocessors = [
    # Replace the placeholder <REPO> with a URL.
    #{ pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" },
]
# render body even when there are no releases to process
# render_always = true
# output file path
# output = "test.md"

[git]
conventional_commits = true
filter_unconventional = true
commit_preprocessors = [
    # Transform our own commit message format into conventional commits format,
    # so we can parse it with git-cliff. Our format is optimized for readability
    # in git logs, and better caters to monorepos, since the package name is at
    # the start of the commit message.
    { pattern = '^([^:]+):([^\\s]+) - (.+)$', replace = "${2}(${1}): ${3}" },
]
commit_parsers = [
    { message = "^feature", group = "<!-- 0 -->Features" },
    { message = "^fix", group = "<!-- 1 -->Bug Fixes" },
    { message = "^refactor", group = "<!-- 2 -->Refactoring" },
    { message = "^docs", group = "<!-- 3 -->Documentation" },
    { message = "^perf", group = "<!-- 4 -->Performance Improvements" },
    { message = "^test", group = "<!-- 5 -->Testing" },
    { message = "^build", group = "Build System", skip = true },
    { message = "^style", group = "Styling", skip = true },
    { message = "^chore", group = "Chores", skip = true },
    { message = "^release", group = "Release", skip = true },
]
# An array of link parsers for extracting external references, and turning them into URLs, using regex.
link_parsers = [
    { pattern = "#(\\d+)", href = "https://github.com/squidfunk/test/issues/$1"}
]
# # Include only the tags that belong to the current branch.
# use_branch_tags = false
# # Order releases topologically instead of chronologically.
# topo_order = false
# # Order releases topologically instead of chronologically.
# topo_order_commits = true
# # Order of commits in each group/release within the changelog.
# # Allowed values: newest, oldest
# sort_commits = "oldest"
